{"version":3,"sources":["reducer.js","context.js","data.js","Navbar.js","CartItem.js","CartContainer.js","App.js","index.js"],"names":["reducer","state","action","type","cart","filter","cartItem","id","payload","tempCart","map","amount","reduce","cartTotal","price","itemTotal","total","parseFloat","toFixed","loading","Error","AppContext","createContext","initialState","title","img","AppProvider","children","useReducer","dispatch","fetchData","a","fetch","response","json","useEffect","Provider","value","clearCart","remove","increase","decrease","Navbar","useContext","className","xmlns","viewBox","d","CartItem","src","alt","onClick","CartContainer","length","item","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bac2ad6.chunk.js","sourcesContent":["const reducer = (state, action) => {\r\n   if (action.type === 'CLEAR_CART') {\r\n      return { ...state, cart: [] };\r\n   }\r\n\r\n   if (action.type === 'REMOVE') {\r\n      return {\r\n         ...state,\r\n         cart: state.cart.filter((cartItem) => cartItem.id !== action.payload),\r\n      };\r\n   }\r\n\r\n   if (action.type === 'INCREASE') {\r\n      //iterate over that cart before the increase\r\n      let tempCart = state.cart.map((cartItem) => {\r\n         //find the item that has been increased in qty\r\n         if (cartItem.id === action.payload) {\r\n            return { ...cartItem, amount: cartItem.amount + 1 };\r\n         }\r\n         //if cartItem is not the item we are looking for in the cart, return them the way they are\r\n         return cartItem;\r\n      });\r\n      return { ...state, cart: tempCart };\r\n   }\r\n\r\n   if (action.type === 'DECREASE') {\r\n      //iterate over that cart before the increase\r\n      let tempCart = state.cart\r\n         .map((cartItem) => {\r\n            //find the item that has been increased in qty\r\n            if (cartItem.id === action.payload) {\r\n               return { ...cartItem, amount: cartItem.amount - 1 };\r\n            }\r\n            //if cartItem is not the item we are looking for in the cart, return them the way they are\r\n            return cartItem;\r\n         })\r\n         .filter((cartItem) => cartItem.amount !== 0); //chain the filter method to remove the item from the cart if its qty is 0\r\n      return { ...state, cart: tempCart };\r\n   }\r\n\r\n   if (action.type === 'GET_TOTALS') {\r\n      let { total, amount } = state.cart.reduce(\r\n         (cartTotal, cartItem) => {\r\n            const { price, amount } = cartItem;\r\n            //console.log(price, amount);\r\n            const itemTotal = price * amount;\r\n            cartTotal.total += itemTotal;\r\n            cartTotal.amount += amount;\r\n            return cartTotal;\r\n         },\r\n         {\r\n            total: 0,\r\n            amount: 0,\r\n         }\r\n      );\r\n      total = parseFloat(total.toFixed(2));\r\n      return { ...state, total, amount };\r\n   }\r\n\r\n   if (action.type === 'LOADING') {\r\n      return { ...state, loading: true };\r\n   }\r\n\r\n   if (action.type === 'DISPLAY_ITEMS') {\r\n      return { ...state, cart: action.payload, loading: false };\r\n   }\r\n\r\n   //handling action type that does not exist\r\n   throw new Error('no matching action type');\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useReducer, createContext, useEffect } from 'react';\nimport cartItems from './data';\nimport reducer from './reducer';\nconst url = 'https://course-api.com/react-useReducer-cart-project';\n\n//create a context\nconst AppContext = createContext();\n\n//initial state\nconst initialState = {\n   loading: false,\n   cart: cartItems,\n   total: 0,\n   amount: 0,\n};\n\n//create the context component/provider\nconst AppProvider = ({ children }) => {\n   const [state, dispatch] = useReducer(reducer, initialState);\n\n   //setting up functions that will be dispatched\n   const clearCart = () => {\n      dispatch({ type: 'CLEAR_CART' });\n   };\n\n   //function to remove an item from cart\n   const remove = (id) => {\n      dispatch({ type: 'REMOVE', payload: id });\n   };\n\n   //function to increase the number of a particular item in cart\n   const increase = (id) => {\n      dispatch({ type: 'INCREASE', payload: id });\n   };\n\n   //function to decrease the number of a particular item in cart\n   const decrease = (id) => {\n      dispatch({ type: 'DECREASE', payload: id });\n   };\n\n   //function to fetch cart items data\n   const fetchData = async () => {\n      dispatch({ type: 'LOADING' });\n      const response = await fetch(url);\n      const cart = await response.json();\n      dispatch({ type: 'DISPLAY_ITEMS', payload: cart });\n   };\n\n   //function to fetch the cart items automatically when the component mounts\n   useEffect(() => {\n      fetchData();\n   }, []);\n\n   //anytime state.cart changes, useEffect executes a callback function that dispatches an action\n   useEffect(() => {\n      dispatch({ type: 'GET_TOTALS' });\n   }, [state.cart]);\n\n   return (\n      <AppContext.Provider\n         value={{\n            ...state,\n            clearCart,\n            remove,\n            increase,\n            decrease,\n         }}\n      >\n         {children}\n      </AppContext.Provider>\n   );\n};\n\nexport { AppContext, AppProvider };\n","export default [\n  {\n    id: 1,\n    title: 'Samsung Galaxy S7',\n    price: 599.99,\n    img:\n      'https://res.cloudinary.com/diqqf3eq2/image/upload/v1583368215/phone-2_ohtt5s.png',\n    amount: 1,\n  },\n  {\n    id: 2,\n    title: 'google pixel ',\n    price: 499.99,\n    img:\n      'https://res.cloudinary.com/diqqf3eq2/image/upload/v1583371867/phone-1_gvesln.png',\n    amount: 1,\n  },\n  {\n    id: 3,\n    title: 'Xiaomi Redmi Note 2',\n    price: 699.99,\n    img:\n      'https://res.cloudinary.com/diqqf3eq2/image/upload/v1583368224/phone-3_h2s6fo.png',\n    amount: 1,\n  },\n];\n","import React, { useContext } from 'react';\nimport { AppContext } from './context';\n\nconst Navbar = () => {\n   //get the amount property in state through context\n   const { amount } = useContext(AppContext);\n   return (\n      <nav>\n         <div className='nav-center'>\n            <h3>useReducer</h3>\n            <div className='nav-container'>\n               <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'>\n                  <path d='M16 6v2h2l2 12H0L2 8h2V6a6 6 0 1 1 12 0zm-2 0a4 4 0 1 0-8 0v2h8V6zM4 10v2h2v-2H4zm10 0v2h2v-2h-2z' />\n               </svg>\n               <div className='amount-container'>\n                  <p className='total-amount'>{amount}</p>\n               </div>\n            </div>\n         </div>\n      </nav>\n   );\n};\n\nexport default Navbar;\n","import React, { useContext } from 'react';\nimport { AppContext } from './context';\n\nconst CartItem = ({ id, img, title, price, amount }) => {\n   //get the remove function through context\n   const { remove, increase, decrease } = useContext(AppContext);\n\n   return (\n      <article className='cart-item'>\n         <img src={img} alt={title} />\n         <div>\n            <h4>{title}</h4>\n            <h4 className='item-price'>${price}</h4>\n            {/* remove button */}\n            <button className='remove-btn' onClick={() => remove(id)}>\n               remove\n            </button>\n         </div>\n         <div>\n            {/* increase amount */}\n            <button className='amount-btn' onClick={() => increase(id)}>\n               <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'>\n                  <path d='M10.707 7.05L10 6.343 4.343 12l1.414 1.414L10 9.172l4.243 4.242L15.657 12z' />\n               </svg>\n            </button>\n            {/* amount */}\n            <p className='amount'>{amount}</p>\n            {/* decrease amount */}\n            <button className='amount-btn' onClick={() => decrease(id)}>\n               <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'>\n                  <path d='M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z' />\n               </svg>\n            </button>\n         </div>\n      </article>\n   );\n};\n\nexport default CartItem;\n","import React, { useContext } from 'react';\nimport { AppContext } from './context';\n\n//child component\nimport CartItem from './CartItem';\n\nconst CartContainer = () => {\n   //get the cart, total property in state through context\n   const { cart, total, clearCart } = useContext(AppContext);\n\n   if (cart.length === 0) {\n      return (\n         <section className='cart'>\n            {/* cart header */}\n            <header>\n               <h2>your bag</h2>\n               <h4 className='empty-cart'>is currently empty</h4>\n            </header>\n         </section>\n      );\n   }\n\n   return (\n      <section className='cart'>\n         {/* cart header */}\n         <header>\n            <h2>your bag</h2>\n         </header>\n         {/* cart items */}\n         <div>\n            {cart.map((item) => {\n               return <CartItem key={item.id} {...item} />;\n            })}\n         </div>\n         {/* cart footer */}\n         <footer>\n            <hr />\n            <div className='cart-total'>\n               <h4>\n                  total <span>${total}</span>\n               </h4>\n            </div>\n            <button className='btn clear-btn' onClick={clearCart}>\n               clear cart\n            </button>\n         </footer>\n      </section>\n   );\n};\n\nexport default CartContainer;\n","import React, { useContext } from 'react';\nimport { AppContext } from './context';\n\n// components\nimport Navbar from './Navbar';\nimport CartContainer from './CartContainer';\n\nfunction App() {\n   //get the loading property in state through context\n   const { loading } = useContext(AppContext);\n   if (loading) {\n      return (\n         <div className='loading'>\n            <h2>Loading...</h2>\n         </div>\n      );\n   }\n\n   return (\n      <main>\n         <Navbar />\n         <CartContainer />\n      </main>\n   );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { AppProvider } from './context';\n\nReactDOM.render(\n   <React.StrictMode>\n      <AppProvider>\n         <App />\n      </AppProvider>\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n"],"sourceRoot":""}